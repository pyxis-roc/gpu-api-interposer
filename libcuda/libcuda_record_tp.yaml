# SPDX-FileCopyrightText: 2019-2023 University of Rochester
#
# SPDX-License-Identifier: MIT

---
main:
  provider: "libcuda_interposer"
includes:
  system:
    - cuda.h
common_args:
  - retval_arg: &retval_arg
      _retval: 
        type: CUresult *
common_fields:
  - retval_field: &retval_field
      _retval: 
        type: ctf_integer
        type_args:
          int_type: CUresult
          expr: "*_retval"
  - ctx_field: &ctx_field
      _ctx:
        type: ctf_integer
        type_args:
          int_type: unsigned int
          expr: "*((unsigned int *) _ctx)"
tracepoint_events:
  cuDriverGetVersion_post:
    fields:
      - driverVersion:
          type: ctf_integer
          type_args:
            int_type: int
            expr: "*driverVersion"
      - *retval_field
      - *ctx_field
  cuDriverGetVersion_pre:
    fields:
      - driverVersion:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: "driverVersion"
      - *ctx_field
  cuGetErrorString_post:
    fields:
      - error:
          type: ctf_integer
          type_args:
            int_type: CUresult
            expr: error
      - pStr_contents:
          type: ctf_string
          type_args:
            field_name: pStr_contents
            expr: '(*pStr == NULL) ? "" : *pStr'
      - *retval_field
      - *ctx_field
  cuMemAlloc_v2_pre:
    fields:
      - dptr: 
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: dptr
      - bytesize:
          type: ctf_integer
          type_args:
            int_type: size_t
            expr: bytesize
      - *ctx_field
  cuMemAlloc_v2_post:
    fields:
      - dptr_contents: 
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: "*dptr"
      - *retval_field
      - *ctx_field
  cuCtxGetCurrent_post:
    fields:
      - pctx_contents:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: "*pctx"
      - *retval_field
      - *ctx_field
  cuCtxGetDevice_post:
    fields:
      - device_contents:
          type: ctf_integer
          type_args:
            int_type: CUdevice
            expr: "*device"
      - *retval_field
      - *ctx_field
  cuCtxSynchronize_post:
    fields:
      - *retval_field
      - *ctx_field
  cuDeviceGetAttribute_post:
    fields:
      - pi_contents:
          type: ctf_integer
          type_args:
            int_type: int
            expr: "*pi"
      - attrib:
          type: ctf_integer
          type_args:
            int_type: CUdevice_attribute
      - dev:
          type: ctf_integer
          type_args:
            int_type: CUdevice
      - *retval_field
      - *ctx_field
  cuDeviceGetCount_post:
    fields:
      - count:
          type: ctf_integer
          type_args:
            int_type: int
            expr: "*count"
      - *retval_field
      - *ctx_field
  cuDeviceGetName_post:
    fields:
      - name:
          type: ctf_string
          type_args:
            expr: name
      - len:
          type: ctf_integer
          type_args:
            int_type: int
      - dev:
          type: ctf_integer
          type_args:
            int_type: CUdevice
      - *retval_field
      - *ctx_field
  cuDeviceGetUuid_post:
    fields:
      - uuid:
          type: ctf_array # should be ctf_array_hex, but leads to issues
          type_args:
            int_type: char
            count: 16
            expr: "uuid->bytes"
      - dev:
          type: ctf_integer
          type_args: 
            int_type: CUdevice
      - *retval_field
      - *ctx_field
  cuDeviceGet_post:
    fields:
      - device_contents:
          type: ctf_integer
          type_args:
            int_type: CUdevice
            expr: "*device"
      - ordinal:
          type: ctf_integer
          type_args:
            int_type: int
      - *retval_field
      - *ctx_field
  cuDeviceTotalMem_v2_post:
    fields:
      - bytes_contents:
          type: ctf_integer
          type_args:
            int_type: size_t
            expr: "*bytes"
      - dev:
          type: ctf_integer
          type_args:
            int_type: CUdevice
      - *retval_field
      - *ctx_field
  cuEventCreate_post:
    fields:
      - phEvent:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
      - Flags:
          type: ctf_integer
          type_args:
            int_type: unsigned int
      - *retval_field
      - *ctx_field
  cuFuncGetAttribute_post:
    fields:
      - pi:
          type: ctf_integer
          type_args:
            int_type: int
            expr: "*pi"
      - attrib:
          type: ctf_integer
          type_args:
            int_type: CUfunction_attribute
      - hfunc:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
      - *retval_field
      - *ctx_field
  cuLaunchKernel_post:
    arg_constructors: |
      static unsigned char argblob[256];
      int argblobsize = 0;
      unsigned int gridDim[3] = {gridDimX, gridDimY, gridDimZ};
      unsigned int blockDim[3] = {blockDimX, blockDimY, blockDimZ};

      if(*_retval == 0) {
         if(kernelParams) {
             argblobsize = get_arg_blob(f, kernelParams, argblob);
         } else if(extra) {
             argblobsize = get_arg_blob_extra(f, extra, argblob);
         }
      }
    subst_args:
      gridDimX:
        with: gridDim
        type: unsigned int *
      blockDimX:
        with: blockDim
        type: unsigned int *
    remove_args:
      - gridDimY
      - gridDimZ
      - blockDimY
      - blockDimZ
      - kernelParams
    fields:
      - f:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
      - gridDim:
          type: ctf_array
          type_args:
            int_type: unsigned int
            count: 3
      - blockDim:
          type: ctf_array
          type_args:
            int_type: unsigned int
            count: 3
      - sharedMemBytes:
          type: ctf_integer
          type_args:
            int_type: unsigned int
      - hStream:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
      - extra:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
      - *retval_field
      - *ctx_field
    blobstore:
      - kernelParams:
          expr: argblob
          length: argblobsize
          guard_expr: kernelParams
      - extra:
          expr: argblob
          length: argblobsize
          guard_expr: extra
      
  cuMemFree_v2_post:
    fields:
      - dptr:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
      - *retval_field
      - *ctx_field
  cuMemsetD8_v2_post:
    fields:
      - dstDevice:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
      - uc:
          type: ctf_integer
          type_args:
            int_type: unsigned char
      - N:
          type: ctf_integer
          type_args:
              int_type: size_t
      - *retval_field
      - *ctx_field
  cuMemsetD16_v2_post:
    fields:
      - dstDevice:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
      - us:
          type: ctf_integer
          type_args:
            int_type: unsigned short
      - N:
          type: ctf_integer
          type_args:
              int_type: size_t
      - *retval_field
      - *ctx_field
  cuMemsetD32_v2_post:
    fields:
      - dstDevice:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
      - ui:
          type: ctf_integer
          type_args:
            int_type: unsigned int
      - N:
          type: ctf_integer
          type_args:
              int_type: size_t
      - *retval_field
      - *ctx_field
  cuMemsetD2D8_v2_post:
    fields:
      - dstDevice:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
      - dstPitch:
          type: ctf_integer
          type_args:
              int_type: size_t
      - uc:
          type: ctf_integer
          type_args:
            int_type: unsigned char
      - Width:
          type: ctf_integer
          type_args:
              int_type: size_t
      - Height:
          type: ctf_integer
          type_args:
              int_type: size_t
      - *retval_field
      - *ctx_field
  cuMemsetD2D16_v2_post:
    fields:
      - dstDevice:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
      - dstPitch:
          type: ctf_integer
          type_args:
              int_type: size_t
      - us:
          type: ctf_integer
          type_args:
            int_type: unsigned short
      - Width:
          type: ctf_integer
          type_args:
              int_type: size_t
      - Height:
          type: ctf_integer
          type_args:
              int_type: size_t
      - *retval_field
      - *ctx_field
  cuMemsetD2D32_v2_post:
    fields:
      - dstDevice:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
      - dstPitch:
          type: ctf_integer
          type_args:
              int_type: size_t
      - ui:
          type: ctf_integer
          type_args:
            int_type: unsigned int
      - Width:
          type: ctf_integer
          type_args:
              int_type: size_t
      - Height:
          type: ctf_integer
          type_args:
              int_type: size_t
      - *retval_field
      - *ctx_field
  cuMemHostAlloc_post:
    fields:
      - pp:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: "*((intptr_t *) pp)"
      - bytesize:
          type: ctf_integer
          type_args:
            int_type: size_t
      - Flags:
          type: ctf_integer
          type_args:
            int_type: unsigned int
      - *retval_field
      - *ctx_field
  cuMemcpy3D_v2_post:
    fields:
      - pCopy:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: ((intptr_t) pCopy)
      - *retval_field
      - *ctx_field
    blobstore:
      - srcMemoryType:
          length: "sizeof(pCopy->srcMemoryType)"
          expr: "&pCopy->srcMemoryType"
      - dstMemoryType:
          length: "sizeof(pCopy->dstMemoryType)"
          expr: "&pCopy->dstMemoryType"
      - WidthInBytes:
          length: "sizeof(pCopy->WidthInBytes)"
          expr: "&pCopy->WidthInBytes"
      - Height:
          length: "sizeof(pCopy->Height)"
          expr: "&pCopy->Height"
      - Depth:
          length: "sizeof(pCopy->Depth)"
          expr: "&pCopy->Depth"
      - srcXInBytes:
          length: "sizeof(pCopy->srcXInBytes)"
          expr: "&pCopy->srcXInBytes"
      - srcY:
          length: "sizeof(pCopy->srcY)"
          expr: "&pCopy->srcY"
      - srcZ:
          length: "sizeof(pCopy->srcZ)"
          expr: "&pCopy->srcZ"
      - dstXInBytes:
          length: "sizeof(pCopy->dstXInBytes)"
          expr: "&pCopy->dstXInBytes"
      - dstY:
          length: "sizeof(pCopy->dstY)"
          expr: "&pCopy->dstY"
      - dstZ:
          length: "sizeof(pCopy->dstZ)"
          expr: "&pCopy->dstZ"
      - srcHost:
          length: "sizeof(pCopy->srcHost)"
          expr: "&pCopy->srcHost"
      - srcDevice:
          length: "sizeof(pCopy->srcDevice)"
          expr: "&pCopy->srcDevice"
      - srcArray:
          length: "sizeof(pCopy->srcArray)"
          expr: "&pCopy->srcArray"
      - srcPitch:
          length: "sizeof(pCopy->srcPitch)"
          expr: "&pCopy->srcPitch"
      - srcHeight:
          length: "sizeof(pCopy->srcHeight)"
          expr: "&pCopy->srcHeight"
      - dstHost:
          length: "sizeof(pCopy->dstHost)"
          expr: "&pCopy->dstHost"
      - dstDevice:
          length: "sizeof(pCopy->dstDevice)"
          expr: "&pCopy->dstDevice"
      - dstArray:
          length: "sizeof(pCopy->dstArray)"
          expr: "&pCopy->dstArray"
      - dstPitch:
          length: "sizeof(pCopy->dstPitch)"
          expr: "&pCopy->dstPitch"
      - dstHeight:
          length: "sizeof(pCopy->dstHeight)"
          expr: "&pCopy->dstHeight"
      - srcData:
          length: "(pCopy->Depth - 1) * pCopy->srcPitch * pCopy->srcHeight + (pCopy->Height-1) * pCopy->srcPitch + pCopy->WidthInBytes"
          expr: "(void*)((char*)(pCopy->srcHost)+(pCopy->srcZ*pCopy->srcHeight+pCopy->srcY)*pCopy->srcPitch + pCopy->srcXInBytes)"
          guard_expr: "pCopy->srcMemoryType == CU_MEMORYTYPE_HOST"
      - dstData:
          length: "(pCopy->Depth - 1) * pCopy->dstPitch * pCopy->dstHeight + (pCopy->Height-1) * pCopy->dstPitch + pCopy->WidthInBytes"
          expr: "(void*)((char*)(pCopy->dstHost)+(pCopy->dstZ*pCopy->dstHeight+pCopy->dstY)*pCopy->dstPitch + pCopy->dstXInBytes)"
          guard_expr: "pCopy->dstMemoryType == CU_MEMORYTYPE_HOST"
  cuMemcpyDtoH_v2_post:
    fields:
      - dstHost:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t            
      - srcDevice:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
      - ByteCount:
          type: ctf_integer
          type_args:
            int_type: size_t
      - *retval_field
      - *ctx_field
    blobstore:
      - dstHost:
           length: ByteCount
  cuMemcpyDtoA_v2_post:
    fields:
      - dstArray:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: ((intptr_t) dstArray)
      - dstOffset:
          type: ctf_integer
          type_args:
            int_type: size_t
      - srcDevice:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
      - ByteCount:
          type: ctf_integer
          type_args:
            int_type: size_t
      - *retval_field
      - *ctx_field
  cuMemcpyAtoA_v2_post:
    fields:
      - dstArray:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: ((intptr_t) dstArray)
      - dstOffset:
          type: ctf_integer
          type_args:
            int_type: size_t
      - srcArray:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: ((intptr_t) srcArray)
      - srcOffset:
          type: ctf_integer
          type_args:
            int_type: size_t
      - ByteCount:
          type: ctf_integer
          type_args:
            int_type: size_t
      - *retval_field
      - *ctx_field
  cuMemcpyAtoD_v2_post:
    fields:
      - dstDevice:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: ((intptr_t) dstDevice)
      - srcArray:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: ((intptr_t) srcArray)
      - srcOffset:
          type: ctf_integer
          type_args:
            int_type: size_t
      - ByteCount:
          type: ctf_integer
          type_args:
            int_type: size_t
      - *retval_field
      - *ctx_field
  cuMemcpyAtoH_v2_post:
    fields:
      - dstHost:
          type: ctf_integer_hex
          type_args:
              int_type: intptr_t
              expr: "*((intptr_t *) dstHost)"
      - srcArray:
          type: ctf_integer_hex
          type_args:
              int_type: intptr_t
      - ByteCount:
          type: ctf_integer
          type_args:
            int_type: size_t
      - *retval_field
      - *ctx_field
    blobstore:
      - dstHost:
           length: ByteCount
  cuMemcpyHtoD_v2_pre:
    fields:
      - dstDevice:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
      - srcHost:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
      - ByteCount:
          type: ctf_integer
          type_args:
            int_type: size_t
      - *ctx_field
    blobstore:
      - srcHost:
          length: ByteCount
  cuMemcpyHtoA_v2_pre:
    fields:
      - dstArray:
          type: ctf_integer_hex
          type_args:
              int_type: intptr_t
      - dstOffset:
          type: ctf_integer_hex
          type_args:
              int_type: size_t
      - srcHost:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
      - ByteCount:
          type: ctf_integer
          type_args:
            int_type: size_t
      - *ctx_field
    blobstore:
      - srcHost:
          length: ByteCount
  cuMemcpyDtoD_v2_pre:
    fields:
      - dstDevice:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
      - srcDevice:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
      - ByteCount:
          type: ctf_integer
          type_args:
            int_type: size_t
      - *ctx_field
  cuModuleGetTexRef_post:
    fields:
      - pTexRef:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: "pTexRef == NULL ? 0 : *pTexRef"
      - hmod:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
      - name:
          type: ctf_string
          type_args:
            expr: name
      - *retval_field
      - *ctx_field
  cuModuleGetSurfRef_post:
    fields:
      - pSurfRef:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: "pSurfRef == NULL ? 0 : *pSurfRef"
      - hmod:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
      - name:
          type: ctf_string
          type_args:
            expr: name
      - *retval_field
      - *ctx_field
  cuModuleGetFunction_post:
    fields:
      - hfunc_contents:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: "*hfunc"
      - hmod:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
      - name:
          type: ctf_string
          type_args:
            expr: name
      - *retval_field
      - *ctx_field
    post_code: |
      if(*_retval == 0) {
         /* printf("CUDA function: %s registered with handle %p\n", name, *hfunc); */
         if(pt) ah_register_handle_for_symbol(pt, *hfunc, name);
      }
  cuModuleGetGlobal_v2_post:
    fields:
      - dptr_contents:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: "dptr != NULL ? *dptr: 0"
      - bytes_contents:
          type: ctf_integer
          type_args:
            int_type: size_t
            expr: "bytes != NULL ? *bytes: 0"
      - hmod:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
      - name:
          type: ctf_string
          type_args:
            expr: "name"
      - *retval_field
      - *ctx_field
  cuModuleUnload_post:
    fields:
      - hmod:
          type: ctf_integer_hex
          type_args: 
            int_type: intptr_t
      - *retval_field
      - *ctx_field
  cuStreamCreate_post:
    fields:
      - phStream:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
      - Flags:
          type: ctf_integer
          type_args:
            int_type: unsigned int
      - *retval_field
      - *ctx_field
  cuTexObjectCreate_post:
    fields:
      - pTexObject_contents:
          type: ctf_integer
          type_args:
            int_type: CUtexObject
            expr: "*pTexObject"
      # - pResDesc:  # TODO: unwrap these structures
      #     type: const CUDA_RESOURCE_DESC *
      # - pTexDesc:
      #     type: const CUDA_TEXTURE_DESC *
      # - pResViewDesc:
      #     type: const CUDA_RESOURCE_VIEW_DESC *
      - *retval_field
      - *ctx_field
  cuTexObjectDestroy_post:
    fields:
      - texObject:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: "((intptr_t) texObject)"
      - *retval_field
      - *ctx_field
  cuParamSetTexRef_post:
    fields:
      - hfunc:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: "((intptr_t) hfunc)"
      - texunit:
          type: ctf_integer
          type_args:
            int_type: int
      - hTexRef:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
      - *retval_field
      - *ctx_field
  cuTexRefSetAddress2D_v3_post:
    fields:
      - hTexRef:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
      - desc:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: "((intptr_t) desc)"
      - dptr:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
      - Pitch:
          type: ctf_integer
          type_args:
            int_type: size_t
      - *retval_field
      - *ctx_field
    blobstore:
      - desc:
          length: "16"
  cuTexRefCreate_post:
    fields:
      - pTexRef:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: "((intptr_t) pTexRef)"
      - *retval_field
      - *ctx_field
  cuTexRefSetFilterMode_post:
    fields:
      - hTexRef:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
      - fm:
          type: ctf_integer
          type_args:
            int_type: int
            expr: "((int) fm)"
      - *retval_field
      - *ctx_field
  cuTexRefSetFlags_post:
    fields:
      - hTexRef:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
      - Flags:
          type: ctf_integer
          type_args:
              int_type: unsigned int
      - *retval_field
      - *ctx_field
  cuTexRefSetAddressMode_post:
    fields:
      - hTexRef:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
      - dim:
          type: ctf_integer
          type_args:
            int_type: int
      - am:
          type: ctf_integer
          type_args:
            int_type: int
            expr: "((int) am)"
      - *retval_field
      - *ctx_field
  cuTexRefSetAddress_v2_post:
    fields:
      - ByteOffset:
          type: ctf_integer_hex
          type_args:
            int_type: size_t
            expr: "ByteOffset == NULL ? 0 : *ByteOffset"
      - hTexRef:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: "((intptr_t) hTexRef)"
      - dptr: 
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: dptr
      - bytes:
          type: ctf_integer
          type_args:
            int_type: size_t
      - *retval_field
      - *ctx_field
  cuTexRefSetFormat_post:
    fields:
      - hTexRef:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: "((intptr_t) hTexRef)"
      - fmt:
          type: ctf_integer
          type_args:
            int_type: unsigned int
            expr: "((unsigned int) fmt)"
      - NumPackedComponents:
          type: ctf_integer
          type_args:
            int_type: int
      - *retval_field
      - *ctx_field
  cuTexRefSetBorderColor_post:
    fields:
      - hTexRef:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: "((intptr_t) hTexRef)"
      - pBorderColor:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: "((intptr_t) pBorderColor)"
      - *retval_field
      - *ctx_field
    blobstore:
      - pBorderColor:
          length: "16"
  cuTexRefSetMaxAnisotropy_post:
    fields:
      - hTexRef:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: "((intptr_t) hTexRef)"
      - maxAniso:
          type: ctf_integer
          type_args:
            int_type: unsigned int
      - *retval_field
      - *ctx_field
  cuTexRefSetMipmapFilterMode_post:
    fields:
      - hTexRef:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: "((intptr_t) hTexRef)"
      - fm:
          type: ctf_integer
          type_args:
            int_type: int
      - *retval_field
      - *ctx_field
  cuTexRefSetMipmapLevelBias_post:
    fields:
      - hTexRef:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: "((intptr_t) hTexRef)"
      - bias:
          type: ctf_float
          type_args:
            float_type: float
      - *retval_field
      - *ctx_field
  cuTexRefSetMipmapLevelClamp_post:
    fields:
      - hTexRef:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: "((intptr_t) hTexRef)"
      - minMipmapLevelClamp:
          type: ctf_float
          type_args:
            float_type: float
      - maxMipmapLevelClamp:
          type: ctf_float
          type_args:
            float_type: float
      - *retval_field
      - *ctx_field
  cuTexRefSetArray_post:
    fields:
      - hTexRef:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
      - hArray:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
      - Flags:
          type: ctf_integer
          type_args:
            int_type: unsigned int
      - *retval_field
      - *ctx_field
  cuMipmappedArrayCreate_post:
    fields:
      - pHandle:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: "((intptr_t) *pHandle)"
      - pMipmappedArrayDesc:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: "((intptr_t) pMipmappedArrayDesc)"
      - numMipmapLevels:
          type: ctf_integer
          type_args:
            int_type: unsigned int
      - *retval_field
      - *ctx_field
    blobstore:
      - pMipmappedArrayDesc:
          length: "24"
  cuMipmappedArrayDestroy_post:
    fields:
      - hMipmappedArray:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: "((intptr_t) hMipmappedArray)"
      - *retval_field
      - *ctx_field
  cuArray3DCreate_v2_post:
    fields:
      - pHandle:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: "*pHandle"
      - pAllocateArray:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: "((intptr_t) pAllocateArray)"
      - *retval_field
      - *ctx_field
    blobstore:
      - Width: 
          length: "sizeof(pAllocateArray->Width)"
          expr: "&pAllocateArray->Width"
      - Height: 
          length: "sizeof(pAllocateArray->Height)"
          expr: "&pAllocateArray->Height"
      - Depth: 
          length: "sizeof(pAllocateArray->Depth)"
          expr: "&pAllocateArray->Depth"
      - Format: 
          length: "sizeof(pAllocateArray->Format)"
          expr: "&pAllocateArray->Format"
      - NumChannels:
          length: "sizeof(pAllocateArray->NumChannels)"
          expr: "&pAllocateArray->NumChannels"
      - Flags:
          length: "sizeof(pAllocateArray->Flags)"
          expr: "&pAllocateArray->Flags"
  cuArrayCreate_v2_post:
    fields:
      - pHandle:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: "*pHandle"
      - pAllocateArray:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
      - *retval_field
      - *ctx_field
    blobstore:
      - pAllocateArray:
          length: "16"
  cuCtxSetCurrent_post:
    fields:
      - ctx:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t            
      - *retval_field
      - *ctx_field
  cuInit_post:
    fields:
      - Flags:
          type: ctf_integer
          type_args:
            int_type: unsigned int
      - *retval_field
      - *ctx_field
  cuDevicePrimaryCtxRelease_post:
    fields:
      - dev:
          type: ctf_integer
          type_args:
            int_type: CUdevice
      - *retval_field
      - *ctx_field
  cuDevicePrimaryCtxRelease_v2_post:
    fields:
      - dev:
          type: ctf_integer
          type_args:
            int_type: CUdevice
      - *retval_field
      - *ctx_field
  cuDevicePrimaryCtxRetain_post:
    fields:
      - pctx_contents:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: "*pctx"
      - dev:
          type: ctf_integer
          type_args:
            int_type: CUdevice
      - *retval_field
      - *ctx_field
        
  cuGetExportTable_post:
    fields:
      - ppExportTable_exports:
          type: ctf_integer_hex
          type_args:
            int_type: intptr_t
            expr: "*ppExportTable"
      - pExportTableId:
          type: ctf_array_hex
          type_args:
            int_type: char
            expr: "pExportTableId->bytes"
            count: 16
      - tableSize:
          type: ctf_integer
          type_args:
            int_type: uint32_t
            expr: "(*_retval == 0) ? *((uint32_t *) *ppExportTable) : 0"
      - *retval_field
      - *ctx_field
  cuMemGetInfo_v2_post:
    fields:
        - free:
            type: ctf_integer
            type_args:
               int_type: size_t
               expr: "*free"
        - total:
            type: ctf_integer
            type_args:
               int_type: size_t
               expr: "*total"      
        - *retval_field
        - *ctx_field
        
